services:
  _defaults:
    autowire: true
    autoconfigure: true
    public: true
    bind:
      $entityManager: "@novaezrssfeed.doctrine.entity_manager"

  Novactive\EzRssFeedBundle\Controller\RssFeedViewController:
    autowire: true
    arguments:
      $cacheTtl: '%novaezrssfeed.cache.ttl%'
      $responseTagger: '@fos_http_cache.http.symfony_response_tagger'
    tags:
    - { name: controller.service_arguments }

  Novactive\EzRssFeedBundle\Form\RssFeedItemsType:
    tags:
    - { name: form.type }

  Novactive\EzRssFeedBundle\Form\Transformer\MultipleChoicesTransformer:

  Novactive\EzRssFeedBundle\Form\RssFeedsType:
    arguments:
      $choicesTransformer: '@Novactive\EzRssFeedBundle\Form\Transformer\MultipleChoicesTransformer'
    tags:
      - { name: form.type }

  Novactive\EzRssFeedBundle\Form\Type\TreeDiscoveryType:
    tags:
    - { name: form.type, alias: field.tree_discovery }

  Novactive\EzRssFeedBundle\Services\RssFeedsService:

  Novactive\EzRssFeedBundle\Core\SiteAccessAwareEntityManagerFactory:
    arguments:
      $repositoryConfigurationProvider: '@Ibexa\Bundle\Core\ApiLoader\RepositoryConfigurationProvider'
      $resolver: "@doctrine.orm.default_entity_listener_resolver"
      $settings: { debug: "%kernel.debug%", cache_dir: "%kernel.cache_dir%" }

  novaezrssfeed.doctrine.entity_manager:
    class: Doctrine\ORM\EntityManagerInterface
    factory: ['@Novactive\EzRssFeedBundle\Core\SiteAccessAwareEntityManagerFactory', 'get']

  Novactive\EzRssFeedBundle\Services\SiteListService:

  Novactive\EzRssFeedBundle\Services\SiteListServiceInterface: '@Novactive\EzRssFeedBundle\Services\SiteListService'

  Novactive\EzRssFeedBundle\EventListener\DoctrineEventListener:
    arguments:
      $httpCachePurgeClient: '@ibexa.http_cache.purge_client'
    tags:
      - { name: doctrine.event_listener, event: postPersist, lazy: true }
      - { name: doctrine.event_listener, event: postUpdate, lazy: true }
      - { name: doctrine.event_listener, event: postRemove, lazy: true }

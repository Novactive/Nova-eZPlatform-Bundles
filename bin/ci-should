#!/usr/bin/env php
<?php

/**
 * eZ Platform Bundles Mono Repo Project.
 *
 * @author    Novactive - SÃ©bastien Morel <s.morel@novactive.com> aka Plopix <morel.seb@gmail.com>
 * @copyright 2020 Novactive
 * @license   MIT
 */

declare( strict_types=1 );

use Composer\Semver\Semver;
use Symfony\Component\Yaml\Yaml;

set_time_limit( 0 );

require dirname( __DIR__ ) . '/vendor/autoload.php';

$action = $_SERVER['argv'][1] ?? '';
$componentDir = "components/{$_SERVER['COMPONENT']}";
$configFile = "{$componentDir}/ci-config.yaml";
if ( $action === '' || !file_exists( $configFile ) )
{
    exit( 1 );
}

$config = Yaml::parse( file_get_contents( $configFile ) );
$composerRequirements = json_decode( file_get_contents( './ibexa/composer.lock' ) );
$findPackageVersion = function ( $packageName ) use ( $composerRequirements ) {
    foreach ( $composerRequirements->packages as $package )
    {
        if ( $package->name === $packageName )
        {
            return $package->version;
        }
    }
};

$componentComposerJson = json_decode( file_get_contents( "{$componentDir}/composer.json" ) );
$requiredPhpVersion = $componentComposerJson->require->php ?? null;
if($requiredPhpVersion) {
    if(!Semver::satisfies(PHP_VERSION, $requiredPhpVersion)) {
        exit( 1 );
    }
}

$ibexaVersion = $findPackageVersion('ibexa/core');
$requiredIbexaVersion = $config['required_ibexa_version'] ?? null;
if ( $requiredIbexaVersion && $ibexaVersion )
{
    if(!Semver::satisfies( $ibexaVersion, $requiredIbexaVersion )) {
        exit( 1 );
    }
}

exit( ( $config[$action] ?? false ) === true ? 0 : 1 );
